import numpy as np
import pandas as pd
df=pd.read_csv('Data.csv')
df
x=df.iloc[:,:-1].values
y=df.iloc[:,3].values
from sklearn.impute import SimpleImputer # Import SimpleImputer instead of Imputer

# Create an instance of SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy='mean') # Use np.nan for missing values

# Fit the imputer to the desired columns of your data
imputer = imputer.fit(x[:, 1:3])

# Transform the data to replace missing values
x[:, 1:3] = imputer.transform(x[:, 1:3])
from sklearn.preprocessing import LabelEncoder,OneHotEncoder
labelencoder_x=LabelEncoder()
x[:,0]=labelencoder_x.fit_transform(x[:,0])

from sklearn.compose import ColumnTransformer

# Create a LabelEncoder for the target variable 'y'
labelencoder_y = LabelEncoder()
y = labelencoder_y.fit_transform(y)

# Create a ColumnTransformer to apply OneHotEncoder to the first column (index 0)
ct = ColumnTransformer(
    [('onehotencoder', OneHotEncoder(), [0])],  # Apply OneHotEncoder to column 0
    remainder='passthrough')  # Keep other columns unchanged


# Fit and transform the data using the ColumnTransformer
x = ct.fit_transform(x)
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)
from sklearn.linear_model import LinearRegression
regressor=LinearRegression()
regressor.fit(x_train,y_train)
from sklearn.preprocessing import StandardScaler
sc_x=StandardScaler()
x_train=sc_x.fit_transform(x_train)
x_test=sc_x.transform(x_test)
